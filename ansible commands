    2  ssh-keygen
    3  ssh-copy-id 172.31.18.211
    4  ssh 172.31.18.211
    5  ssh-copy-id 172.31.18.211
    7  ssh 172.31.18.211
    8  mkdir ansible
   10  cd ansible/
   11  vi myhosts
   13  ansible all -i myhosts -m ping
   15  cd
   16  cd Ansible-SAI_1992/
   17  ls
   18  git pull
   20  for adding another node (redhat)
   ssh-copy-id 172.31.21.210
   23  ssh 172.31.21.210
       git pull
   29  ansible-playbook -i myhosts myping.yml
   
To see all connected nodes information type below command in ansible master node

   ansible all -i myhosts -m setup
To install webserver on both redhat and ubuntu nodes by using single play book we use condition base :

like when: ansible_os_family == "Debian"   for ubuntu node
     when: ansible_os_family == "RedHat"   for RedHat node
To seerequired node information type below command in ansible master node

sai@ip-172-31-27-92:~/Ansible-SAI_1992$ ansible all -i myhosts -m setup -a "filter=*family*"
172.31.18.211 | SUCCESS => {
    "ansible_facts": {
        "ansible_os_family": "Debian",
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false
}
172.31.21.210 | SUCCESS => {
    "ansible_facts": {
        "ansible_os_family": "RedHat",
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false


Templates & Handlers:
i want to dsiplay apache2 webpage replaced with my own content
for this before writing playbook we need to create index.j2 file with which you want from node and your matter as follows:

#<h1> This is SAI & HARISH </h1>
#<h1> Displaying i.p address of node: "{{ansible_all_ipv4_addresses}}" </h1>
#<h1> Displaying Family of particular node: "{{ansible_os_family}}"</h1>

after writing index.j2 file you will go to template.yml playbook

DYNAMIC INVENTORY:

1. create AWS admin user
2. under Master >>user sai
   on Ubuntu 
   sudo apt-get install python-pip
   sudo pip install boto
3. on user sai and root
   create vi.boto (file)
   [Credentials]
   aws_access_key_id=foo 
   aws_secret_access_key= ---
4.Create a AMI by using our required existing ubuntu node or redhat node
   go to ansible node actions>>create AMI and name as ubuntunodeAMI and create
   Then go to ec2 ami and it will run
     after creating AMI all data from the node will be stored
5. Create instances by using playbook

   

